# Default values for seraph-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: seraph-agent
  pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "local"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # Specifies whether RBAC resources should be created
  create: true

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# seraph.config.json values
seraphConfig:
  port: 8080
  workers: 4
  apiKey: ""
  serverApiKey: ""
  llm:
    # The LLM provider to use. Options: "gemini", "anthropic", "openai"
    provider: "gemini"
    # The specific model to use for analysis
    model: "gemini-2.5-flash-lite"
  alertManager:
    url: "http://prometheus-kube-prometheus-alertmanager.monitoring.svc.cluster.local:9093"
  preFilters: []
    # - "level":"debug"
    # - "status":"(200|204)"
  rateLimit:
    window: 60000
    maxRequests: 100
  recentLogsMaxSizeMb: 10
  defaultMcpServers: []
    # - fetch
    # - time
  
  # A list of prompts to run on startup after the agent is initialized.
  startupPrompts: []
  
  # Built-in MCP server configuration for Git, Prometheus, and Kubernetes tools
  builtInMcpServer:
    # Path to local Git repository for analysis
    gitRepoPath: ""
    # Prometheus server URL for metrics queries
    prometheusUrl: "http://prometheus-kube-prometheus-prometheus.monitoring.svc.cluster.local:9090"
    # Kubernetes context for kubectl commands (optional)
    kubernetesContext: ""
    # Default Kubernetes namespace (optional, uses 'default' if not specified)
    kubernetesNamespace: "default"

# A list of secrets to mount as environment variables.
# Each key-value pair in these secrets will be available as an environment variable.
additionalSecrets: []
  # - my-mcp-secret-1
  # - my-mcp-secret-2

# Name of the secret containing the API keys
secrets:
  name: "seraph-secrets"
