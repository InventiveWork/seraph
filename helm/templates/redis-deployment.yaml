{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "seraph.fullname" . }}-redis
  labels:
    {{- include "seraph.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "seraph.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "seraph.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "seraph.fullname" . }}-redis-secret
              key: redis-password
              optional: true
        command:
        - redis-server
        args:
        - --requirepass
        - $(REDIS_PASSWORD)
        - --maxmemory
        - {{ .Values.redis.maxMemory | quote }}
        - --maxmemory-policy
        - {{ .Values.redis.maxMemoryPolicy | quote }}
        {{- if .Values.redis.persistence.enabled }}
        - --save
        - "900 1"
        - --save
        - "300 10"
        - --save  
        - "60 10000"
        {{- else }}
        - --save
        - ""
        {{- end }}
        resources:
          {{- toYaml .Values.redis.resources | nindent 10 }}
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- if .Values.redis.persistence.enabled }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        {{- end }}
      {{- if .Values.redis.persistence.enabled }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ include "seraph.fullname" . }}-redis-pvc
      {{- end }}
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}