apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: prometheus-stack
    meta.helm.sh/release-namespace: monitoring
    # Add any cloud-specific load balancer annotations here if needed.
    # Example for AWS internal LoadBalancer:
    # service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    # Example for Azure internal LoadBalancer:
    # service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  creationTimestamp: "2025-08-01T01:41:06Z" # Keep existing fields but do not manually change creationTimestamp, resourceVersion, uid
  labels:
    app: kube-prometheus-stack-prometheus
    app.kubernetes.io/instance: prometheus-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 75.15.1
    chart: kube-prometheus-stack-75.15.1
    heritage: Helm
    release: prometheus-stack
    self-monitor: "true"
  name: prometheus-stack-kube-prom-prometheus
  namespace: monitoring
  resourceVersion: "71655671" # Do not manually change
  uid: e9d0aedc-fc1f-4daf-b2ae-9d6b1b6be256 # Do not manually change
spec:
  # Remove clusterIP and clusterIPs. Kubernetes will assign one automatically.
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: http-web
    port: 9090 # This is the port exposed on the LoadBalancer
    protocol: TCP
    targetPort: 9090 # This is the port your Prometheus Pod listens on
  - appProtocol: http
    name: reloader-web
    port: 8080 # This is the port exposed on the LoadBalancer for the reloader
    protocol: TCP
    targetPort: reloader-web # This is the target port for the reloader
  selector:
    app.kubernetes.io/name: prometheus
    operator.prometheus.io/name: prometheus-stack-kube-prom-prometheus
  sessionAffinity: None
  type: LoadBalancer # <--- This is the crucial change!
  # If you need a specific static IP for the load balancer (if your cloud provider supports it):
  # loadBalancerIP: "YOUR_STATIC_IP_ADDRESS"
status:
  loadBalancer: {} # This will be populated by Kubernetes with the external IP/hostname
